# Generated by Django 2.0.10 on 2019-01-30 20:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('login', '0019_auto_20190125_0156'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_time', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='login.Task')),
            ],
            options={
                'ordering': ['c_time'],
            },
        ),
        migrations.AlterModelOptions(
            name='label',
            options={'ordering': ['m_time']},
        ),
        migrations.RemoveField(
            model_name='label',
            name='is_tagged',
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='num_tagged',
        ),
        migrations.RemoveField(
            model_name='subtask',
            name='users',
        ),
        migrations.RemoveField(
            model_name='user',
            name='favorite_tasks',
        ),
        migrations.AddField(
            model_name='label',
            name='is_rejected',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='label',
            name='is_unreviewed',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='taskuser',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='login.User'),
        ),
        migrations.AddField(
            model_name='label',
            name='task_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='login.TaskUser'),
        ),
        migrations.AddField(
            model_name='task',
            name='users',
            field=models.ManyToManyField(related_name='favorite_tasks', through='login.TaskUser', to='login.User'),
        ),
    ]
